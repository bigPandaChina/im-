<?xml version="1.0" encoding="UTF-8" ?>      
<!DOCTYPE mapper      
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"      
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sellerNet.backManagement.dao.impl.ExperienceMapperImpl">

	<!-- 结果集 -->
	<resultMap id="expResult"
		type="com.sellerNet.backManagement.entity.Experience">
		<id property="id" column="id" jdbcType="INTEGER" />
		<result property="nickName" column="nickName" jdbcType="VARCHAR" />
		<result property="avator" column="avator" jdbcType="VARCHAR" />
		<result property="content" column="content" jdbcType="VARCHAR" />
		<result property="reminds" column="reminds" jdbcType="VARCHAR" />
		<result property="districtId" column="districtId" jdbcType="VARCHAR" />
		<result property="createdTime" column="createdTime" />
		<result property="creator" column="creator" jdbcType="INTEGER" />
		<result property="isLocked" column="isLocked" jdbcType="TINYINT" />
		<result property="lastModifiedTime" column="lastModifiedTime" />
		<result property="lastModifier" column="lastModifier" jdbcType="INTEGER" />
	</resultMap>

	<!-- 新增User实体类 -->
	<insert id="insert" parameterType="com.sellerNet.backManagement.entity.Experience">
		insert into
		bao_app_experience(content,reminds,districtId,createdTime,creator,isLocked,lastModifiedTime,lastModifier)
		values(#{content,jdbcType=VARCHAR},#{reminds,jdbcType=VARCHAR}
		,#{districtId,jdbcType=VARCHAR},#{createdTime},#{creator,jdbcType=INTEGER},#{isLocked,jdbcType=TINYINT},#{lastModifiedTime},#{lastModifier,jdbcType=INTEGER})

		<selectKey resultType="long" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID();
		</selectKey>
	</insert>


	<!-- 根据id查询用户 -->
	<select id="selectPk" parameterType="Long" resultMap="expResult">
		select * from bao_app_experience where id = #{id}
	</select>

	<!-- 更新对象 -->
	<update id="update" parameterType="com.sellerNet.backManagement.entity.Experience">
		update bao_app_experience
		<set>
			<if test="content != null">content=#{content,jdbcType=INTEGER},</if>
			<if test="reminds != null">reminds=#{reminds,jdbcType=VARCHAR},</if>
			<if test="districtId != null">districtId=#{districtId,jdbcType=VARCHAR},</if>
			<if test="createdTime != null">createdTime=#{createdTime},</if>
			<if test="creator != null">creator=#{creator,jdbcType=INTEGER},</if>
			<if test="isLocked != null">isLocked=#{isLocked,jdbcType=VARCHAR},</if>
			<if test="lastModifiedTime != null">lastModifiedTime=#{lastModifiedTime},</if>
			<if test="lastModifier != null">lastModifier=#{lastModifier,jdbcType=INTEGER}</if>
		</set>
		<where>
			<if test="id != null">
				id = #{id,jdbcType=INTEGER}
			</if>
		</where>
	</update>
	<!-- -->
	<!-- 查询所有朋友圈发布信息 1=1 and ex.creator in (SELECT f.friendId from im_friend 
		f where f.userId=#{userId}) -->
	<select id="findAllExperiences" parameterType="java.util.Map"
		resultMap="expResult">
		SELECT * from bao_app_experience ex
		where ex.creator in (SELECT f.friendId
		from bao_im_friend f where f.userId=#{userId}) OR ex.creator=#{userId}
		and ex.isLocked = 0
		order by ex.id desc
		limit #{start},#{end}
	</select>

	<!-- 查询所有朋友圈发布信息 1=1 and ex.creator in (SELECT f.friendId from im_friend 
		f where f.userId=#{userId}) -->
	<select id="findAllExperiencesByUsesrId" parameterType="java.util.Map"
		resultMap="expResult">
		SELECT * from bao_app_experience ex
		where ex.creator = #{userId}
		and
		ex.isLocked = 0
		order by ex.id desc
		limit #{start},#{end}
	</select>

	<!-- 查询（参数） -->
	<select id="selectParam" parameterType="java.util.Map"
		resultMap="expResult">
		SELECT * from bao_app_experience f
		where 1=1
		<if test="userId != null">
			and f.creator = #{userId}
		</if>
		<if test="photoId != null">
			and f.id = #{photoId}
		</if>
	</select>

	<!-- 根据主键删除 -->
	<delete id="delete" parameterType="java.util.Map">
		delete from bao_app_experience where id = #{id}
	</delete>

</mapper>   