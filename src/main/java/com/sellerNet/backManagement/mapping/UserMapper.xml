<?xml version="1.0" encoding="UTF-8" ?>      
<!DOCTYPE mapper      
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"      
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="com.sellerNet.backManagement.dao.impl.AppUserMapperImpl">  
      
   <!-- 结果集 -->     
   <resultMap id="userResult" type="com.sellerNet.backManagement.entity.User">   
   		<id     property="id" column="id"  />  
      	<result property="userId" column="userId"   />
      	<result property="username" column="username"   />
		<result property="password" column="password"   />
		<result property="paypassword" column="paypassword"   />
		<result property="accountNumber" column="accountNumber"  />
		<result property="phoneNumber" column="phoneNumber"  />
		<result property="userEmail" column="userEmail"  />
		<result property="balance" column="balance"  />
		<result property="qrCode" column="qrCode"  />
		<result property="districtId" column="districtId"   />
		<result property="sex" column="sex"   />
		<result property="thermalSignatrue" column="thermalSignatrue"  />
		<result property="token" column="token"   />
		<result property="iscy" column="iscy"   />
		<result property="isvip" column="isvip"  />
		<result property="isbang" column="isbang"   />
		
		<result property="avatar" column="avatar"  />
		<result property="backAvatar" column="backAvatar"  />
		<result property="paypassword" column="paypassword"  />
		<result property="createdTime" column="createdTime"  />
		<result property="creator" column="creator"  />
		<result property="isLocked" column="isLocked"  />
		<result property="lastModifiedTime" column="lastModifiedTime"   />
		<result property="lastModifier" column="lastModifier"  />
		<result property="loginFailedCount" column="loginFailedCount"  />
		<result property="lastLoginTime" column="lastLoginTime" />
		
		<result property="age" column="age"  />
		<result property="job" column="job" />
		<result property="hobby" column="hobby"  />
		<result property="label" column="label"  />
		<result property="spreadQrCode" column="spreadQrCode"  />
		
      <!-- 多对一的关系，注意resultMap的名字为 引用的namespace+resultMap的Id -->  
     <!--  <association property="dep" column="depid" javaType="Dep" resultMap="hwt.Mapper.DepMapper.depResult"/>  --> 
   </resultMap>
   
   <resultMap type="com.sellerNet.backManagement.dto.UserDto" id="userdto">
   		<result property="phoneNumber" column="phone_number" jdbcType="VARCHAR" />
   </resultMap>
   
   <delete id="delete" parameterType="long">  
        delete from bao_appusers where id = #{id}  
   </delete> 
     
   <!-- 新增app端用户 -->  
    <insert id="insert" parameterType="com.sellerNet.backManagement.entity.User">  
        insert into bao_appusers(userId,username,password,accountNumber,phoneNumber,userEmail,balance,qrCode,iscy,isvip,isbang,createdTime,creator,isLocked,lastModifiedTime,lastModifier,age,job,hobby,label,spreadQrCode) values(#{userId,jdbcType=INTEGER},#{username,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},#{accountNumber,jdbcType=VARCHAR},
        					    #{phoneNumber,jdbcType=VARCHAR},#{userEmail,jdbcType=VARCHAR},#{balance,jdbcType=VARCHAR},#{qrCode,jdbcType=VARCHAR},#{iscy,jdbcType=TINYINT},#{isvip,jdbcType=TINYINT},#{isbang,jdbcType=VARCHAR},#{createdTime},#{creator,jdbcType=INTEGER},#{isLocked,jdbcType=TINYINT},#{lastModifiedTime}
        					    ,#{lastModifier,jdbcType=INTEGER},#{age,jdbcType=INTEGER},#{job,jdbcType=VARCHAR},#{hobby,jdbcType=VARCHAR},#{label,jdbcType=VARCHAR},#{spreadQrCode,jdbcType=VARCHAR})  
   		<selectKey resultType="long" order="AFTER" keyProperty="id">
   			SELECT LAST_INSERT_ID();
   		</selectKey>
   </insert> 
   
   <!-- 通过手机号查询用户 --> 
   <select id="byPhoneNumber" parameterType="String" resultMap="userResult">
      select  * from bao_appusers where phoneNumber = #{phoneNumber}
   </select> 
   
   <!-- 通过环信账号查询用户 --> 
  <!--  <select id="findUserByImNumber" parameterType="String" resultMap="imuserdto">
      select  * from t_app_user where im_number = #{imNumber} 
   </select>  -->
   
   <!-- 通过邮箱查询用户 --> 
   <select id="byUserEmail" parameterType="String" resultMap="userResult">
      select  * from bao_appusers where user_email = #{userEmail}
   </select> 
   
   <!-- 通过用户名查询用户 --> 
   <select id="byUserName" parameterType="String" resultMap="userResult">
      select  * from bao_appusers where user_name = #{username}
   </select> 
   
   <!-- 获取id值最大的用户 --> 
   <select id="byMaxUser"  resultMap="userResult">
       select * from bao_appusers  u where u.accountNumber = (select max(accountNumber) from bao_appusers)
   </select> 
   <!-- 模糊搜索好友--> 
   <select id="byUserIdAndTerms"  parameterType="java.util.Map" resultMap="userResult">
       select * from bao_appusers  u 
       <where>
       		<if test="username != null">
       		u.username LIKE CONCAT(CONCAT('%', #{username}), '%')
       		</if> 
       		<if test="phoneNumber != null">
       		u.phoneNumber = #{phoneNumber}
       		</if> 
       </where>
   </select> 
   
      <!-- 模糊搜索好友--> 
   <select id="findByCondition"  parameterType="java.util.Map" resultMap="userResult">
       select * from bao_appusers  where 1=1 and userId is not null 
      	  <if test="userId != null">
       		 and	userId != #{userId} 
       		</if> 
       		<if test="sex != null">
       		 and	sex = #{sex} 
       		</if> 
       		<if test="ageStart != null">
       		 and	age &gt;= #{ageStart} 
       		</if> 
       		<if test="ageEnd != null">
       		 and	age &lt;= #{ageEnd} 
       		</if> 
       		<if test="job != null">
       		 and	job LIKE CONCAT(CONCAT('%', #{job}), '%') 
       		</if> 
       		<if test="address != null">
       		 	and districtId LIKE CONCAT(CONCAT('%', #{address}), '%') 
       		</if> 
       		<if test="hobbylist != null">
       			and
       			<foreach collection="hobbylist"  item="ulist"  open="(" separator="or" close=")" index="index">
       				 find_in_set(#{ulist},hobby) 
       			</foreach>
       		</if> 
       		<if test="num != null">
       		 ORDER BY RAND()  LIMIT #{num} 
       		 </if> 
   </select> 
   
   <!-- 根据id查询用户 --> 
   <select id="selectPk"  parameterType="Long" resultMap="userResult">
       select * from bao_appusers  where id = #{id}
   </select> 	
   <!-- 根据userId查询用户 --> 
   <select id="byUserId"  parameterType="Long" resultMap="userResult">
       select * from bao_appusers  where userId = #{userId}
   </select> 	
   
   <!-- 根据id查询用户 --> 
   <select id="select"   resultMap="userResult">
       select * from bao_appusers  
   </select> 	
   
   <!-- 更新对象  -->
   <update id="update" parameterType="com.sellerNet.backManagement.entity.User">  
      update bao_appusers   
      <set>  
      <if test="username != null">username=#{username,jdbcType=VARCHAR},</if>  
      <if test="password != null">password=#{password,jdbcType=VARCHAR},</if>
      <if test="districtId != null">districtId=#{districtId,jdbcType=VARCHAR},</if>
      <if test="sex != null">sex=#{sex,jdbcType=INTEGER},</if> 
      <if test="thermalSignatrue != null">thermalSignatrue=#{thermalSignatrue,jdbcType=VARCHAR},</if> 
      <if test="phoneNumber != null">phoneNumber=#{phoneNumber,jdbcType=VARCHAR},</if> 
      <if test="userEmail != null">userEmail=#{userEmail,jdbcType=VARCHAR},</if> 
      <if test="balance != null">balance=#{balance,jdbcType=VARCHAR},</if> 
      <if test="avatar != null">avatar=#{avatar,jdbcType=VARCHAR},</if> 
      <if test="token != null">token=#{token,jdbcType=VARCHAR},</if> 
      <if test="iscy != null">iscy=#{iscy,jdbcType=TINYINT},</if> 
      <if test="isvip != null">isvip=#{isvip,jdbcType=TINYINT},</if> 
      <if test="isbang != null">isbang=#{isbang,jdbcType=VARCHAR},</if> 
      <if test="backAvatar != null">backAvatar=#{backAvatar,jdbcType=VARCHAR},</if> 
      <if test="paypassword != null">paypassword=#{paypassword,jdbcType=VARCHAR},</if> 
      <if test="createdTime != null">createdTime=#{createdTime},</if> 
      <if test="creator != null">creator=#{creator,jdbcType=INTEGER},</if> 
      <if test="isLocked != null">isLocked=#{isLocked,jdbcType=TINYINT},</if> 
      <if test="lastModifiedTime != null">lastModifiedTime=#{lastModifiedTime},</if>
      <if test="lastModifier != null">lastModifier=#{lastModifier,jdbcType=INTEGER},</if> 
      <if test="loginFailedCount != null">loginFailedCount=#{loginFailedCount,jdbcType=INTEGER},</if>
      <if test="lastLoginTime != null">lastLoginTime=#{lastLoginTime},</if> 
      <if test="age != null">age=#{age},</if> 
      <if test="job != null">job=#{job},</if> 
      <if test="hobby != null">hobby=#{hobby},</if> 
       <if test="label != null">label=#{label},</if> 
      <if test="spreadQrCode != null">spreadQrCode=#{spreadQrCode}</if> 
      </set>  
      <where>  
        <if test="id != null">  
            id = #{id,jdbcType=INTEGER}
        </if>  
      </where>  
   </update>  
     
  <!-- 更新对象（参数）  
    <update id="updateParam" parameterType="java.util.Map">  
      update emp   
      <set>  
      <if test="empname != null">empname=#{empname,jdbcType=VARCHAR},</if>  
      <if test="dep != null">depid=#{depid,jdbcType=INTEGER},</if>  
      </set>  
      <where>  
        <if test="empid != null">  
            empid = #{empid,jdbcType=INTEGER}  
        </if>  
      </where>  
   </update>  
     
    批量更新  
   <update id="updateBatch" parameterType="Emp">  
        collection可以是List对于list,数组对于array,Map对应ids  
        <foreach collection="list" item="emp" separator=";">  
            update emp   
                <set>  
                   <if test="emp.empname != null">empname= #{emp.empname,jdbcType=VARCHAR},</if>  
                   <if test="emp.dep != null">depid= #{emp.dep.depid,jdbcType=INTEGER},</if>  
                </set>  
                <where>  
                    <if test="emp.empid != null">  
                        empid = #{emp.empid,jdbcType=INTEGER}  
                    </if>  
                </where>  
        </foreach>  
   </update>  
     
   根据主键删除  
   <delete id="deletePK" parameterType="int">  
        delete from emp where empid = #{empid}  
   </delete>  
     
   根据参数删除  
   <delete id="deleteParam" parameterType="java.util.Map">  
        delete from emp  
        <where>  
            <if test="empname != null">empname = #{empname}</if>  
            <if test="depid != null"> and depid = #{depid}</if>  
            <if test="empid != null"> and empid = #{empid}</if>  
        </where>  
   </delete>  
     
   批量删除  
   <delete id="deleteBatch" parameterType="arraylist">  
        delete from emp where empid in   
        <trim prefix="(" suffix=")" suffixOverrides=",">  
            <foreach collection="list" item="pk" separator=",">  
                #{pk}  
            </foreach>  
        </trim>  
   </delete>  
     
   批量插入  
   <insert id="insertBatch" parameterType="arraylist">  
        insert into emp(empid,empname,depid)   
        collection可以是List对于list,数组对于array,Map对应ids  
        <foreach collection="list" item="emp"  index="index" separator="union all">  
         select #{emp.empid,jdbcType=NUMERIC},#{emp.empname,jdbcType=VARCHAR},#{emp.dep.depid,jdbcType=NUMERIC} from dual  
        </foreach>  
   </insert>  
     
   count  
   <select id="count" resultType="int">  
        select count(*) from emp e   
  </select>  
  <select id="countParam" parameterType="java.util.Map" resultType="int">  
        select count(*) from emp e   
        <where>  
        <if test="empname != null">empname = #{empname}</if>  
        <if test="depid != null"> and depid = #{depid}</if>  
        <if test="empid != null"> and empid = #{empid}</if>  
       </where>  
  </select> -->
    
   
   <select id="countParam" parameterType="java.util.Map" resultType="int">  
       SELECT count(*) from bao_appusers f
         <where> 
          f.isLocked=0
        <if test="orderId != null">
          and f.orderId = #{orderId}
        </if>  
        
        <if test="phoneNumber != null">
        	and f.phoneNumber = #{phoneNumber}
        </if>
        
        <if test="imNumber != null">
        	and f.im_number = #{imNumber}
        </if>
        
        <if test="username != null">
        	and f.user_name = #{username}
        </if>
        
        <if test="start != null">
        limit
        #{start},
        </if>
        <if test="end != null">
        #{end}
        </if>
         
       </where>  
       <if test="orderColumn != null">  
            order by ${orderColumn}  
            <if test="orderTurn != null">  
                ${orderTurn}  
            </if>  
       </if>  
  </select> 
  
   <!-- 查询（参数）   -->
   <select id="selectParam" parameterType="java.util.Map" resultMap="userResult">  
        SELECT f.*,t2.nickname from bao_appusers f 
        left join bao_users t2 on t2.user_id =f.userId 
         <where>  
           f.isLocked=0 and (f.isbang not in (10) or f.isbang is null )
        <if test="rechargeStatus != null">
        	and f.rechargeStatus = #{rechargeStatus}
        </if>  
        <if test="orderId != null">
        	and f.orderId = #{orderId}
        </if>  
          <if test="userId != null">
        	and f.userId = #{userId}
        </if>  
        
        <if test="phoneNumber != null">
        	and f.phoneNumber = #{phoneNumber}
        </if>
         <if test="dis != null">
        	and f.districtId  LIKE CONCAT(CONCAT('%', #{dis}), '%') 
        </if>
        <if test="disList != null">
       			and f.districtId is not null and 
       			<foreach collection="disList"  item="ulist"  open="(" separator="or" close=")" index="index">
       				 f.districtId  LIKE CONCAT(CONCAT('%', #{ulist}), '%') 
       			</foreach>
       		</if> 
        
        <if test="imNumber != null">
        	and f.im_number = #{imNumber}
        </if>
        
        <if test="username != null">
        	and f.user_name = #{username}
        </if>
         <if test="job != null">
        	and f.job LIKE CONCAT(CONCAT('%', #{job}), '%') 
        </if>
         <if test="hobby != null">
        	and f.hobby LIKE CONCAT(CONCAT('%', #{hobby}), '%') 
        </if>
        
        <if test="userId != null">
        	and f.userId = #{userId}
        </if>
        <if test="iscy != null">
        	and f.iscy = #{iscy}
        </if>
        
        order by f.id desc
        <if test="start != null">
        limit
        #{start},
        </if>
        <if test="end != null">
        #{end}
        </if>
        
       </where>  
       <if test="orderColumn != null">  
            order by ${orderColumn}  
            <if test="orderTurn != null">  
                ${orderTurn}  
            </if>  
       </if>  
   </select> 
     
</mapper>   