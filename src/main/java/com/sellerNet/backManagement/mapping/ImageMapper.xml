<?xml version="1.0" encoding="UTF-8" ?>      
<!DOCTYPE mapper      
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"      
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="com.sellerNet.backManagement.dao.impl.ImageMapperImpl">  
      
   <!-- 结果集 -->     
   <resultMap id="imageResult" type="com.sellerNet.backManagement.entity.Image">   
   		<id     property="id" column="id"  jdbcType="INTEGER" />  
      	<result property="objectId" column="objectId" jdbcType="INTEGER"  />
		<result property="category" column="category" jdbcType="VARCHAR"  />
		<result property="url" column="url" jdbcType="VARCHAR" />
		<result property="avatar" column="avatar" jdbcType="VARCHAR" />
		<result property="username" column="username" jdbcType="VARCHAR" />
		<result property="orderBy" column="orderBy" jdbcType="INTEGER" />
		<result property="createdTime" column="created_time" />
		<result property="creator" column="creator" jdbcType="INTEGER" />
		<result property="isLocked" column="isLocked" jdbcType="TINYINT" />
		<result property="lastModifiedTime" column="lastModifiedTime"   />
		<result property="lastModifier" column="lastModifier" jdbcType="INTEGER" />
   </resultMap>
   
    <!--   根据参数删除  --> 
   <delete id="deleteParam" parameterType="java.util.Map">  
        delete from bao_image  where 1=1 
          <if test="id != null">
          and  id = #{collectId}
          </if>  
            <if test="userId != null">
         and creator = #{userId} 
          </if>  
          <if test="objectId != null">
         and objectId = #{objectId} 
          </if>  
   </delete>  
   
    <delete id="delete" parameterType="java.util.Map">  
        delete from bao_image  where id = #{collectId} and creator = #{userId} 
   </delete>  
   
   <!-- 结果集 -->     
   <resultMap id="imageDtoResult" type="com.sellerNet.backManagement.dto.ImageDto">   
		<result property="url" column="url" jdbcType="VARCHAR" />
		<result property="orderBy" column="orderBy" jdbcType="INTEGER" />
   </resultMap>
   
   <!-- 新增User实体类 -->  
    <insert id="insert" parameterType="com.sellerNet.backManagement.entity.Image">  
        insert into bao_image(objectId,url,avatar,username,orderBy,createdTime,creator,isLocked,lastModifiedTime,lastModifier,category) values(#{objectId,jdbcType=INTEGER},#{url,jdbcType=VARCHAR},#{avatar,jdbcType=VARCHAR},#{username,jdbcType=VARCHAR}
        ,#{orderBy,jdbcType=INTEGER},#{createdTime},#{creator,jdbcType=INTEGER},#{isLocked,jdbcType=TINYINT},#{lastModifiedTime},#{lastModifier,jdbcType=INTEGER},#{category})  
   		<selectKey resultType="long" order="AFTER" keyProperty="id">
   			SELECT LAST_INSERT_ID();
   		</selectKey>
   </insert>  
   
   <!-- 根据id查询用户 --> 
   <select id="selectPk"  parameterType="Long" resultMap="imageResult">
       select * from bao_image  where id = #{id}
   </select>
    	
   <!-- 根据id查询用户 --> 
   <select id="getByObjectIdAndCategory"  parameterType="java.util.Map" resultMap="imageResult">
       select * from bao_image  where category=#{category} and objectId = #{objectId}
   </select>
   <!-- 根据id查询用户 --> 
   <!-- <select id="getByObjectIdNews"  parameterType="java.util.Map" resultMap="imageResult">
       select * from bao_image  where category=#{category} and objectId = #{objectId}
   </select> -->
   
   <!-- 根据所有的图片信息--> 
   <select id="select"   resultMap="imageResult">
       select * from bao_image 
   </select>
   
   <!-- 更新对象  -->
   <update id="update" parameterType="com.sellerNet.backManagement.entity.Image">  
      update bao_image   
      <set>  
      <if test="objectId != null">objectId=#{objectId,jdbcType=INTEGER},</if>  
      <if test="category != null">category=#{category,jdbcType=VARCHAR},</if>
      <if test="url != null">url=#{url,jdbcType=VARCHAR},</if> 
      <if test="orderBy != null">orderBy=#{orderBy,jdbcType=INTEGER},</if> 
      <if test="createdTime != null">created_time=#{createdTime},</if> 
      <if test="creator != null">creator=#{creator,jdbcType=INTEGER},</if> 
      <if test="isLocked != null">isLocked=#{isLocked,jdbcType=TINYINT},</if> 
      <if test="lastModifiedTime != null">lastModifiedTime=#{lastModifiedTime},</if>
      <if test="lastModifier != null">lastModifier=#{lastModifier,jdbcType=INTEGER},</if> 
      </set>  
      <where>  
        <if test="id != null">  
            and  id = #{id,jdbcType=INTEGER}
        </if>  
      </where>  
   </update>  
     
  <!--批量插入  -->  
   <insert id="insertBatch" parameterType="arraylist">  
        insert into bao_image(objectId,category,url,orderBy,createdTime,creator,isLocked,lastModifiedTime,lastModifier,category)   
        <!-- collection可以是List对于list,数组对于array,Map对应ids  --> 
        <foreach collection="list" item="image"  index="index" separator="union all">  
         select #{image.objectId,jdbcType=INTEGER},
         #{image.category,jdbcType=VARCHAR},
         #{image.url,jdbcType=VARCHAR},
         #{image.orderBy,jdbcType=INTEGER},
         #{image.createdTime},
         #{image.creator,jdbcType=INTEGER},
         #{image.isLocked,jdbcType=TINYINT},
         #{image.lastModifiedTime},
         #{image.lastModifier,jdbcType=INTEGER}
         #{image.category}
         from dual  
        </foreach>  
   </insert>  
    
   <select id="countParam" parameterType="java.util.Map" resultType="int">  
       SELECT count(*) from bao_image f
         <where> 
        <if test="userId != null">
          and f.creator = #{userId}
        </if>  
        <if test="category != null">
          and f.category = #{category}
        </if>  
        
        <if test="start != null">
        limit
        #{start},
        </if>
        <if test="end != null">
        #{end}
        </if>
         
       </where>  
       <if test="orderColumn != null">  
            order by ${orderColumn}  
            <if test="orderTurn != null">  
                ${orderTurn}  
            </if>  
       </if>  
  </select> 
  
   <!-- 查询（参数）   -->
   <select id="selectParam" parameterType="java.util.Map" resultMap="imageResult">  
        SELECT * from bao_image f
         <where>  
           f.isLocked=0 
        <if test="objectId != null">
          and f.objectId = #{objectId}
        </if>  
        <if test="category != null">
          and f.category = #{category}
        </if>  
        <if test="userId != null">
          and f.creator = #{userId}
        </if>  
        <if test="start != null">
        limit
        #{start},
        </if>
        <if test="end != null">
        #{end}
        </if>
         
       </where>  
       <if test="orderColumn != null">  
            order by ${orderColumn}  
            <if test="orderTurn != null">  
                ${orderTurn}  
            </if>  
       </if>  
   </select> 
    
    <!-- 查询相册 -->
   <select id="getByUserIdAndCategory" parameterType="java.util.Map" resultMap="imageResult" >  
   	  SELECT * from bao_image im
		where im.creator =  #{userId}
		and im.isLocked = 0
		and im.objectId!=0
		<if test="category != null">
		and im.category=#{category}
        </if>
		order by im.id desc
		<if test="start != null">
        limit
        #{start},
        </if>
        <if test="end != null">
        #{end}
        </if>
   </select> 
   
    <!-- 根据用户id获取该用户的收藏 -->
   <select id="getCollectionsByUserId" parameterType="java.util.Map" resultMap="imageResult" >  
   	  SELECT * from bao_image im
		where im.creator =  #{userId}
		and im.isLocked = 0
		and im.objectId = 0
		order by im.id desc
		<if test="start != null">
        limit
        #{start},
        </if>
        <if test="end != null">
        #{end}
        </if>
   </select> 
    
    
</mapper>   