<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sellerNet.backManagement.dao.impl.NewsBackMapperImpl">
<!-- 结果集 -->     
   <resultMap id="backResult" type="com.sellerNet.backManagement.entity.Back">   
   		<id     property="id" column="id"  />  
      	<result property="evaluateId" column="evaluateId"  />
		<result property="fromUserId" column="fromUserId"   />
		<result property="toUserId" column="toUserId" />
		<result property="content" column="content" />
		<result property="createdTime" column="createdTime"  />
   </resultMap>  
   <!-- 结果集 -->     
   <resultMap id="backOutResult" type="com.sellerNet.backManagement.dto.im.BackOut">   
   		<id     property="id" column="id"   />  
      	<result property="fromUserId" column="fromUserId"   />
		<result property="fromUserAvatar" column="fromUserAvatar"   />
		<result property="fromUserNickName" column="fromUserNickName"   />
		<result property="content" column="content" />
		<result property="toUserId" column="toUserId" />
		<result property="toUserNickName" column="toUserNickName" />
		<result property="isLikeTime" column="isLikeTime"  />
		<result property="isLike" column="isLike"  />
		<result property="createdTime" column="createdTime"  />
   </resultMap>  
	<select id="selectByEvaId" resultMap="backOutResult" parameterType="java.util.Map">
		select t1.*,t2.nickname fromUserNickName,t3.nickname toUserNickName,t2.face fromUserAvatar from bao_news_back t1
		left outer join bao_users t2 on t1.fromUserId=t2.user_id 
		left outer join bao_users t3 on t1.toUserId=t3.user_id 
		where evaluateId = #{evaluateId}
		order by createdTime desc
	</select>
	<select id="selectCountByEvaId" resultType="Long" parameterType="Long">
		select count(*) from bao_news_back 
		where evaluateId = #{evaluateId}
	</select>
	
	<insert id="insert" parameterType="java.util.Map">
		insert into bao_news_back (evaluateId,fromUserId,toUserId,content,createdTime)
		values(#{evaluateId},#{fromUserId},#{toUserId},#{content},#{createdTime})
	</insert>

	<delete id="delete" parameterType="java.util.Map">
		delete from bao_news_back where id=#{id}
	</delete>
	
</mapper>