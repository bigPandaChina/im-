<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/task
    	http://www.springframework.org/schema/task/spring-task-3.2.xsd">
    <mvc:annotation-driven>
    	<mvc:message-converters register-defaults="true">
     	<!-- @ResponseBody 不返回空对象及变量 -->
     	<!-- <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        	<property name="objectMapper">
               <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                   <property name="serializationInclusion">
                      <value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>
                   </property>
               </bean>
        	</property>
     	</bean> -->
     	<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
                <property name="objectMapper">  
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">  
                        <property name="dateFormat">  
                            <bean class="java.text.SimpleDateFormat">  
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />  
                            </bean>  
                        </property>  
                    </bean>  
                </property>  
       </bean> 
    </mvc:message-converters>
    </mvc:annotation-driven>
    <mvc:default-servlet-handler />
    <context:annotation-config></context:annotation-config>
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.sellerNet.backManagement.*" />
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value> 
			</list>
		</property>
	</bean>
	
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter"/>	<!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	
	<!-- 定义跳转的文件的前后缀 ，视图模式配置-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<!-- <bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        默认编码
        <property name="defaultEncoding" value="utf-8" />  
        文件大小最大值
        <property name="maxUploadSize" value="10485760000" />  
        内存中的最大值
        <property name="maxInMemorySize" value="40960" />  
    </bean>  -->
    <bean id="tokenInterceptor"   
			class="com.sellerNet.backManagement.config.TokenInterceptor"/>
    <!-- 配置SpringMVC拦截器 -->
    <mvc:interceptors>
    	<!-- Validator拦截器 -->
    	<mvc:interceptor> 
    		<mvc:mapping path="/**/*"/>
	    	<bean class="com.devefx.validation.support.spring.ValidatorInterceptor"></bean> 
    	</mvc:interceptor> 
    	<mvc:interceptor> 
    		<mvc:mapping path="/api/**"/>
    		<mvc:exclude-mapping path="/apk/**"/>
    		<mvc:exclude-mapping path="/api/qr/**"/>
    		<mvc:exclude-mapping path="/api/users/signUp.do"/>
    		<mvc:exclude-mapping path="/api/users/signIn.do"/>
    		<mvc:exclude-mapping path="/api/users/forgetPassword.do"/>
    		<mvc:exclude-mapping path="/api/users/sendMessage.do"/>
    		<mvc:exclude-mapping path="/api/users/verificationUser.do"/>
    		<mvc:exclude-mapping path="/api/news/getNewsListByType.do"/>
    		<mvc:exclude-mapping path="/api/news/getAllNewsType.do"/>
    		<mvc:exclude-mapping path="/api/news/getNewsIndexDetail.do"/>
    		<mvc:exclude-mapping path="/api/search/selectHotSearch.do"/>
	    	<bean class="com.sellerNet.backManagement.config.TokenInterceptor"></bean> 
    	</mvc:interceptor> 
    </mvc:interceptors>
    <!-- spring 国际化配置 -->
    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="messages"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>
    <!-- 配置jfreeChart -->
<!--     <bean name="columnChartController"  class="com.yxin.platform.agent.management.controller.ColumnChartController" /> -->
    <!-- task任务扫描注解 -->  
    <!-- 开启这个配置 spring才能识别@Scheduled注解 -->
    <task:annotation-driven scheduler="qbScheduler" mode="proxy"/>
    <task:scheduler id="qbScheduler" pool-size="10"/>
</beans>